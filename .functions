#!/usr/local/bin/bash 


backup_my_passwords() {
    pushd "$HOME/dropbox" || exit 1
    tgtfile="./passwords-backup/passwords-$(date +%Y%m%d).kdbx"
    if [[ -f "$tgtfile"  ]]; then
        echo "FILE ALREADY EXISTS"
    else
        cp "./passwords.kdbx" "$tgtfile"
        echo "FILE COPY COMPLETE"
    fi
    popd || exit
}


set_python_2() {
    export PYTHONPATH=/usr/local/lib/python2.7/site-packages:~/Library/Python/2.7/lib/python/site-packages
    alias ipython="$(which ipython2)"
    alias python="$(which python2.7)"
    alias pip="$(which pip2.7)"
}

set_python_3() {
    unset PYTHONPATH
    alias ipython="$(which ipython3)"
    alias python="$(which python3)"
    alias pip="$(which pip3)"
}

adialog() {
  message="$*"
  {
    osascript -e "tell app \"System Events\" to display dialog \"$message\"" >/dev/null 2>&1 && echo 0
  } || {
    echo 1
  }
}


function logtimesplit() { 
  t1="$(tail -n2 $HOME/mytasks.txt | head -n1 | perl -p -e 's/^.*\047 at //g')"
  t2="$(tail -n1 $HOME/mytasks.txt | perl -p -e 's/^.*\047 at //g')"
  ddiff "$t1" "$t2" -f '%H %M'
}

function logtask() { 
  if [[ $# -eq 0 ]]; then
    tail -n20 $HOME/mytasks.txt
    echo
    echo "USAGE: logtask TASKNAME [start|stop]"
    echo "   Logs start/stops to file $HOME/mytasks.txt"
  else
    taskname="$1" 
    startstop="${2:-start}" 
    echo "${startstop[*]^} task '$taskname' at $(date +'%Y-%m-%d %H:%M:%S')" | tee -a $HOME/mytasks.txt 
    if [ $startstop == "stop" ]; then
      logtimesplit
      logtimesplit | sed -e 's/ /:/g' >> $HOME/mytimes.txt
      sum_times.py $HOME/mytimes.txt
    fi
  fi
}

logstart() {
  if [[ $# -eq 0 ]]; then 
    echo "USAGE: logstart TASKNAME"
  else
    logtask "$*" start
  fi
}

logstop() {
  if [[ $# -eq 0 ]]; then 
    echo "USAGE: logstop TASKNAME"
  else
    logtask "$*" stop
  fi
}

function styler() {
  Rscript -e 'require("readr"); require("styler"); style_text(read_file(commandArgs(trailingOnly = TRUE)))' "$1"
}

function settruecolor() {
  red="$1"
  green="$2"
  blue="$3"
  printf "\x1b[38;2;%d;%d;%dm" $red $green $blue
}

function resettruecolor() {
  printf "\x1b[0m"
}

function gitignore() {
  arg=("$@")
  for ((i=0; i<$#; i++)); do
    echo "${arg[i]}" >> .gitignore
  done
}

save_last_command() {
  function_file=$HOME/saved_functions.txt
  echo !! >> $function_file
}


# vim: ft=sh
